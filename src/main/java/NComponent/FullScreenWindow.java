package NComponent;

import Tools.PaintPictureManage;
import Tools.PictureDraw.SuperPictureShower;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class FullScreenWindow extends JFrame {
    private JPanel panel1;
    private SuperPictureShower superPictureShower;

    public FullScreenWindow() {
        init();
    }

    private void init() {
        setUndecorated(true);
        setSize(PaintPictureManage.FreeOfScreenSize);
        getContentPane().add(panel1);
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                if (!isShowing()) return;
                PaintPicturePanel.paintPicturePanel.paintPictureManage.update();
            }
        });
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                PaintPicturePanel.paintPicturePanel.paintPictureManage.setFullScreen(false);
            }
        });
    }

    public FullScreenWindow(SuperPictureShower superPictureShower) {
        init();
        setImageCanvas(superPictureShower);
    }

    public void setVisible(boolean visible) {
        super.setVisible(visible);
        if (visible && PaintPicturePanel.paintPicturePanel.paintPictureManage != null) {
            PaintPicturePanel.paintPicturePanel.paintPictureManage.getPictureViewer().getHandleComponent().requestFocusInWindow();
        }
    }

    public void setImageCanvas(SuperPictureShower superPictureShower) {
        if (superPictureShower == null) return;
        if (this.superPictureShower != null)
            panel1.remove(PaintPicturePanel.paintPicturePanel.paintPictureManage.getPictureViewer().getHandleComponent());
        this.superPictureShower = superPictureShower;
        panel1.add(PaintPicturePanel.paintPicturePanel.paintPictureManage.getPictureViewer().getHandleComponent(), BorderLayout.CENTER);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
